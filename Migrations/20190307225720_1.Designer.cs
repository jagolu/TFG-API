// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20190307225720_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Models.Permission", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("roleid");

                    b.HasKey("id");

                    b.HasIndex("roleid");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("API.Models.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("nickname")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("open");

                    b.Property<string>("password")
                        .IsRequired();

                    b.Property<string>("profileImg")
                        .IsRequired();

                    b.Property<Guid>("roleid");

                    b.Property<string>("tokenValidation")
                        .IsRequired();

                    b.HasKey("id");

                    b.HasIndex("roleid");

                    b.ToTable("User");
                });

            modelBuilder.Entity("API.Models.UserPermission", b =>
                {
                    b.Property<Guid>("userId");

                    b.Property<Guid>("permissionId");

                    b.HasKey("userId", "permissionId");

                    b.HasIndex("permissionId");

                    b.ToTable("UserPermission");
                });

            modelBuilder.Entity("API.Models.Permission", b =>
                {
                    b.HasOne("API.Models.Role", "role")
                        .WithMany()
                        .HasForeignKey("roleid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("API.Models.User", b =>
                {
                    b.HasOne("API.Models.Role", "role")
                        .WithMany()
                        .HasForeignKey("roleid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("API.Models.UserPermission", b =>
                {
                    b.HasOne("API.Models.Permission", "Permission")
                        .WithMany("users")
                        .HasForeignKey("permissionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("API.Models.User", "User")
                        .WithMany("permissions")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
